/* Generated by Together */

/**
 * For a description of Regular visitors, follow hyperlink to the Administration
 * use case for issuing a new Regular visitor permit.
 */
public class Regular_visitor_permit extends Permit
{
	/**
	 * The name of the University member hosting the visit.
	 */
	private String hostName;

	/**
	 * The date that the visit starts - entry will not be allowed before this date.
	 * 
	 * @label Starting on
	 * @clientCardinality 1
	 * @supplierCardinality 1
	 * @link aggregation
	 * @directed
	 */
	private int lnkDateStart;

	/**
	 * The date that the visit ends - entry will not be allowed after this date.
	 * 
	 * @label Ending on
	 * @clientCardinality 1
	 * @supplierCardinality 1
	 * @link aggregation
	 * @directed
	 */
	private int lnkDateEnd;

	public Regular_visitor_permit(String permitHolder, Date currentDate, String hostName, int dateS, int dateE)
	{
		super(permitHolder, currentDate);
		this.hostName = hostName;
		this.lnkDateStart = dateS;
		this.lnkDateEnd = dateE;
		if (currentDate.getDate() <= dateS || currentDate.getDate() >= dateE)
		{
			this.setPermitted(false);
		}
		else
		{
			this.setPermitted(true);
		}
	}

	/**
	 * Returns the name of the host/sponsor of this day permit
	 * 
	 * @return String		The name of the host 
	 */
	public String getHostName()
	{
		return this.hostName;
	}

	/**
	 * Returns the day this regular permit begins permitted access
	 * 
	 * @return int		The day this permit begins permitted access  
	 */
	public int getStartDate()
	{
		return this.lnkDateStart;
	}

	/**
	 * Returns the day this regular permit ends permitted access
	 * 
	 * @return int		The day this permit ends permitted access  
	 */
	public int getEndDate()
	{
		return this.lnkDateEnd;
	}

	/**
	 * Sets the name of the host/sponsor of this day permit
	 * 
	 * @param String		The name of the host 
	 */
	public void setHostName(String hostName)
	{
		this.hostName = hostName;
	}

	/**
	 * Sets the day this regular permit begins permitted access
	 * 
	 * @param int		The day this permit begins permitted access  
	 */
	public void setStartDate(int date)
	{
		this.lnkDateStart = date;
	}

	/**
	 * Sets the day this regular permit ends permitted access
	 * 
	 * @param int		The day this permit ends permitted access  
	 */
	public void setEndDate(int date)
	{
		this.lnkDateEnd = date;
	}
	
	/**
	 * The regular permit newDayUpdate sets entered 
	 * to false, clears any vehicle references in 
	 * vehicleUsedToday and checks if the current 
	 * date is greater than or equal to the start date
	 * and less than or equal to the end date
	 */
	public void newDayUpdate()
	{
		this.setEntered(false);
		this.clearVehicleUsedToday();
		if (currentDate.getDate() >= this.getStartDate() && currentDate.getDate() <= this.getEndDate()) 
		{
			this.setPermitted(true);
		}
		else {
			this.setPermitted(false);
		}
	}

	/**
	 * The regular permit newYearUpdate method is empty as it is not currently necessary we call it.
	 */
	public void newYearUpdate()	{
	}
}
